<div id="edit_domain" class="ui small modal">
    <i class="close icon"></i>
    <div class="header">
        Modification du domaine << {{domain.name}} >>
    </div>
    <div class="content">
        {{ form_start(form, {'method': 'PUT', 'action': path('domain_update', {'id': domain.id}), 'attr': {'class': 'ui form', 'id': 'edit_domain_form'} }) }}
            <div class="field">
                {{ form_label(form.name,"Nom") }}
                {{ form_widget(form.name,{'attr':{'placeholder':'Nom du domaine', 'data-validate': 'name'}})}}
            </div>

            <div class="field">
                {{ form_label(form.description,"Description") }}
                {{ form_errors(form.description, {'attr': {'class': 'ui error message'}})}}
                {{ form_widget(form.description,{'attr':{'placeholder':'Description du domaine', 'data-validate': 'description'}})}}
            </div>

            <div class="field" {% if not is_granted('ROLE_ADMIN') %} style="display: none;"{% endif %}>
                <div class="ui checkbox">
                    <input id='checkbox_activate_edit' type="checkbox" name="send_activate" {% if domain.state == 1 %} checked="checked" {% endif %}>
                    <label> Activer le domaine</label>
                </div>
            </div>

            <div class="field">
                <div class="ui fluid card">
                    <div class="content">
                        <div class="header">Ajout des sous-domaines</div>
                    </div>
                    <div class="content">
                        <table class="ui very basic table">
                            <thead>
                                <tr><th>Nom</th>
                                    <th>Description</th>
                                    <th class="right aligned">Action</th>
                                </tr>
                            </thead>
                            <tbody class="subDomains_edit" data-prototype="{{ _self.subDomain_prototype(form.subDomains.vars.prototype)|e }}">
                                {% for subDomain in form.subDomains %}
                                    <tr>
                                        {{ _self.subDomain_prototype(subDomain) }}
                                    </tr>
                                {% endfor %}
                            </tbody>
                            {% macro subDomain_prototype(childForm) %}
                                <td>{{ form_widget(childForm.name,{'attr':{'data-validate': 'name_subDomain'}}) }}</td>
                                <td>{{ form_widget(childForm.description,{'attr':{'data-validate': 'description_subDomain'}}) }}</td>

                            {% endmacro %}
                        </table>
                    </div>
                </div>
            </div>

            <div class="field">
                <div id="server_error_message_edit" class="ui negative message" style="display:none">
                    <i class="close icon"></i>
                    <div id="server_error_content_edit" class="header">Internal server error</div>
                </div>
                <div id="error_name_message_edit" class="ui error message" style="display: none">
                    <i class="close icon"></i>
                    <div id="error_name_header_edit" class="header"></div>
                    <ul id="error_name_list_edit" class="list">

                    </ul>
                </div>
            </div>
            {{form_widget(form._token)}}
            {{ form_end(form) }}
        <!--/form-->
    </div>
    <div class="actions">
        <div id="cancel_edit_domain" class="ui black deny button">
            Annuler
        </div>
        <div id='submit_edit_domain' class="ui primary icon button">
            <i class="save icon"></i>
            Sauvegarder
        </div>
    </div>
</div>
<script>
    function addSubDomainForm($collectionHolder, $newLinkTr) {
        // Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');

        // get the new index
        var index = $collectionHolder.data('index');

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        var $newForm = prototype.replace(/__name__/g, index);

        // increase the index with one for the next item
        $collectionHolder.data('index', index + 1);

        // Display the form in the page in an li, before the "Add a subDomain" link li
        var $newFormTr = $('<tr></tr>').append($newForm);
        $newLinkTr.before($newFormTr);
        addSubDomainFormDeleteLink($newFormTr);
    }

    function addSubDomainFormDeleteLink($subDomainFormTr) {
        var $removeFormA = $('<td class="right aligned"><button class="ui red compact icon button" data-tooltip="Supprimer" data-position="bottom center" data-inverted="" data-variation="mini"><i class="trash icon"></i></button></td>');
        $subDomainFormTr.append($removeFormA);
        $removeFormA.on('click', function (e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the subDomain form
            $subDomainFormTr.remove();
        });
    }

    var $collectionHolder;

    // setup an "add a subDomain" link
    var $addSubDomainLink = $('<button class="ui primary button" ><i class="add user icon"></i> Ajouter</button>');
    var $newLinkTr = $('<tr></tr>').append($addSubDomainLink);

    jQuery(document).ready(function () {
        /******** suppression des subDomains *********/
        // Get the ul that holds the collection of subDomains
        $collectionHolder = $('tbody.subDomains_edit');

        // add a delete link to all of the existing subDomain form li elements
        $collectionHolder.find('tr').each(function () {
            addSubDomainFormDeleteLink($(this));
        });


        /******** Ajout des subDomains *********/

        // Get the ul that holds the collection of subDomains
        $collectionHolder = $('tbody.subDomains_edit');

        // add the "add a subDomain" anchor and li to the subDomains ul
        $collectionHolder.append($newLinkTr);

        // count the current form inputs we have (e.g. 2), use that as the new
        // index when inserting a new item (e.g. 2)
        $collectionHolder.data('index', $collectionHolder.find(':input').length);

        $addSubDomainLink.on('click', function (e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new subDomain form (see next code block)
            addSubDomainForm($collectionHolder, $newLinkTr);
        });
    });
</script>